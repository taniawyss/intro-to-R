?barplot
install.packages("rmarkdown")
```r
abs(-11)
?p.adjust
log2(c(1,2,3,4))
library(DESeq2)
# Numeric constant:	a number, such as 128.5
128.5
?abs
# - Numeric constant:	a number (integer or decimal (float)), such as 128.5
# - Character constant: a text sequence, such a "Hello" (enclosed in quotes)
# - Function: pre-written code that performs a specific task and can be  executed by
# "calling" the function.
# -  Write the function's name, followed by parentheses. Inside the parenthesis,
# pass variables or values to the function code = function arguments.
abs(temp)
## ---- R key concepts:
# - Variable: A storage space in memory that has a name and can hold data.
temp <- -5.5	# Create a variable named temp, holding value -5.5
help(abs)
# - Variable: A storage space in memory that has a name and can hold data.
temp <- -5.5	# Create a variable named temp, holding value -5.5, using the
# - Numeric constant:	a number (integer or decimal (float)), such as 128.5
# - Character constant: a text sequence, such a "Hello" (enclosed in quotes)
# - Function: pre-written code that performs a specific task and can be  executed by
# "calling" the function.
# -  Write the function's name, followed by parentheses. Inside the parenthesis,
# pass variables or values to the function code (=function arguments).
abs(temp)
log2(16)
# - Operator: a special function for arithmetic, logical or other operations.
# Examples of arithmetic operators: +, -, *, /, ^
2^10
# - Operator: a special function for arithmetic, logical or other operations.
# Examples of arithmetic operators: +, -, *, /, ^
10^3 # 2 to the power of 10
## ---- Working directory
# This is not the same concept as the workspace! The working directory is the location
# on your computer where R will look for files and save files, i.e. the current
# folder that is being used to load files.
getwd()
## ---- Working directory
# This is not the same concept as the workspace! The working directory is the location
# on your computer where R will look for files and save files, i.e. the current
# folder that is being used to load files.
# To view the current working directoriy:
getwd()
# To set the current working directory to another location:
setwd("/Users/tania/Documents/")
# To set the current working directory to another location:
setwd("Users/tania/Dropbox/My Mac (pc-10.home)/Documents/BCF/courses/intro_to_R/intro-to-R/docs")
# To set the current working directory to another location:
setwd("/Users/tania/Dropbox/My Mac (pc-10.home)/Documents/BCF/courses/intro_to_R/intro-to-R/docs/")
# Once a package is installed, its content needs to be made accessible to R.
library(stringi) # loads the package for the current session.
### Exercise
# What is the output of the below commands? Why?
# My Script​
library(limma)
library(DESeq2)  library(MASS)  library(ggplot2)​
library(MASS)  library(ggplot2)​
library(ggplot2)​
# Once a package is installed, its content needs to be made accessible to R.
library(matrix) # loads the package for the current session.
# Once a package is installed, its content needs to be made accessible to R.
library(stats) # loads the package for the current session.
### Exercise
# What is the output of the below commands? Why?
# My Script​
library(limma)
### Exercise
# What is the output of the below commands? Why?
# My Script​
library(DESeq2)
library(MASS)
library(ggplot2)
### Exercise
# What is the output of the below commands? Why?
library(stringi)
### ---- Session Information
R.version.string	# prints the currently used R version.​
sessionInfo() # prints version information about R and attached or loaded packages.​
?plot
### Afternoon - Part 1
### Plotting
# Two main options are available within R for plotting.
# Base R plotting functions from the graphics package (comes already pre-installed)
?graphics::plot
# Plotting - the basics
x <- 1:100
y <- log(x) + (x/100)^5
plot(x,y) # equivalent to plot(x, y, type="p")
# Customizing plots
plot(x, y, type="l", col="red",  lwd=7)
### In omics data analysis, we more routinely use ggplot2, which has to be
# installed
library(ggplot2)
install.packages("ggplot2")
?hist
# incomplete statement (+) (in the console, will wait), or Esc
1 + 1+
+ 2
# incomplete statement (+) (in the console, will wait), or Esc
1 + 1+
#  + 2
# Part 2
###################################
# Basic Data Types and Structures #
###################################
# The # character stands for comments
The # character stands for comments
# incomplete statement (+) (in the console, will wait), or Esc
1 + 1+
#  + 2
# Part 2
###################################
# Basic Data Types and Structures #
###################################
# The # character stands for comments
### !!! ALMOST EVERYTHING IN R IS AN OBJECT !!! #
# An object is a storage space that contains a value, a data structure, or some code
#   Variables are object containing data
#   Functions are object containing code
# The assignment operator
# We can use either <- or = to assign values to an object
# Stick to one for consistency.
###################
# Basic data types
# Numeric: Number, stored with decimal point
# Examples: 0, 1, 55.2, -11.1111
number1 <- -11.1111
1 + 1 +
# incomplete statement (+) (in the console, will wait), or Esc
1 + 1 +
+ 2
?write.csv
### Exercise:
# Create a script, add some code in it and run it!
# First Steps and commands, ex. 1
w <- 3
h <- 0.5
area <- w * h
area
# - Variable: A storage space in memory that has a name and can hold data.
temp <- -5.5	# Create a variable named temp, holding value -5.5, using the
# - Numeric constant:	a number (integer or decimal (float)), such as 128.5
# - Character constant: a text sequence, such a "Hello" (enclosed in quotes)
# - Function: pre-written code that performs a specific task and can be  executed by
# "calling" the function.
#   To use a function, write the function's name, followed by parentheses. Inside
# the parenthesis, pass variables or values to the function code (=function arguments).
abs(temp)
# Find out the required arguments by looking up the help:
help(abs) # or ?abs
log2(16)
# - Operator: a special function for arithmetic, logical or other operations.
# Examples of arithmetic operators: +, -, *, /, ^
10^3 # 10 to the power of 3
### Exercise
# In the console, what is the output of the below commands? Why?
library(stringi)
### Exercise
# In the console, what is the output of the below commands? Why?
library(DESeq2)
library(MASS)
library(ggplot2)
### Exercise
# In the console, what is the output of the below commands? Why?
library(limma)
abs(temp)
### Exercise:
# Create a script, add some code in it and run it!
# First Steps and commands, ex. 1
w <- 3
h <- 0.5
area <- w * h
area
# - Variable/object: A storage space in memory that has a name and can hold data.
temp <- -5.5	# Create a variable named temp, holding value -5.5, using the
# Numeric: Number, stored with decimal point (i.e integers or float)
# Examples: 0, 1, 55.2, -11.1111
number1 <- -11.1111
number2 <- 0
# Character: Text sequence. Must be enclosed in quotes " " or ' '
# Examples: "1a++", 'Hello World', "s" , "99"
text1 <- 'Hello World'
text2 <-"99"
text2*2
# Logical: TRUE or FALSE (all upper case)
logical1 <- TRUE
# Factor: used to represent categorical data.
genotype <- factor(c("WT", "WT", "Mut2", "Mut1", "Mut2"))
levels(genotype) # The available values in a factor are called levels
# By default factor levels are sorted alphabetically
# But we can specify them manually
genotype <- factor(c("WT", "WT", "Mut2", "Mut1", "Mut2"),
levels=c("WT","Mut1","Mut2")) # specify
levels(genotype)
5_number<-5
ls() # no arguments
sqrt(81) # one argument
rep(1, 2) # two arguments, separated by a comma ,
# To find out the number and types of arguments required, check the help!
?sqrt
?rep
?base::rep
sqrt(81) # one argument
# To find out the number and types of arguments required, check the help!
# Use ?function_name to check R's help and see which arguments a function expects:
?sqrt
# Some functions have arguments with default values
?round # Usage: round(x, digits = 0)
?round # Usage: round(x, digits = 0)
# Arguments with default values can be omitted in the function call.
# Arguments without default values cannot be omitted.
round(2.011) # rounding to 0 digits, the default
round(x=2.011, digits=2) # rounding to 2 digits after the decimal point
# Solution
# Assign the values 6.7 and 56.3 to variable a and b, respectively
a <- 6.7
b <- 56.3
# Calculate the logarithm of x and the logarithm in base 2 of x
?log
# Calculate (2*a)/b+(a*b) and assign the result to variable x.
# Display the content of x
x <- (2*a)/b + (a*b)
x
# Calculate the logarithm of x and the logarithm in base 2 of x
?log
log(x,base = 2) # same as log2(x)
round(5.5667, 2) # two arguments, separated by a comma ,
